---
# Section 1 Fixes
- name: "NOTSCORED | 1.1 | AUDIT | Ensure the Pre-Installation Planning Checklist Has Been Implemented"
  debug:
      msg:
          - "Warning! Make sure you have your pre-installation checklist completed"
          - "Please refer to control 1.1 in the benchmark document for those items"
  when:
      - apache_cis_1_1
      - apache_cis_section1
  tags:
      - level 1
      - level 2
      - notscored
      - audit
      - rule_1.1

- name: "NOTSCORED | 1.2 | AUDIT | Ensure the Server Is Not a Multi-Use System"
  block:
      - name: "NOT SCORED | 1.2 | AUDIT | Ensure the Server Is Not a Multi-Use System | Gather running services for review"
        command: chkconfig --list | grep ':on'
        changed_when: false
        failed_when: false
        register: apache_rhel_1_2_running_services

      - name: "NOTSCORED | 1.2 | AUDIT | Ensure the Server Is Not a Multi-Use System | Display running services"
        debug:
            msg:
                - "Warning! Below are the running services. Please review"
                - "Servers should only be single service"
                - "{{ apache_rhel_1_2_running_services.stdout_lines }}"
  when:
      - apache_cis_1_2
      - apache_cis_section1
  tags:
      - level1
      - level2
      - notscored
      - audit
      - rule_1.2

- name: "NOTSCORED | 1.3 | PATCH | Ensure Apache Is Installed From the Appropriate Binaries"
  yum:
      name: httpd
      state: present
  when:
      - apache_cis_1_1
      - apache_cis_section1
      - apache_cis_disruption_high
  tags:
      - level1
      - level2
      - notscored
      - audit
      - rule_1.3

#Section 2 Fixes
- name: "NOTSCORED | 2.1 | AUDIT | Ensure Only Necessary Authentication and Authorization Modules Are Enabled"
  block:
      - name: "NOT SCORED | 2.1 | AUDIT | Ensure Only Necessary Authentication and Authorization Modules Are Enabled | Capture Auth modules"
        shell: httpd -M | egrep 'auth._'
        changed_when: false
        failed_when: false
        register: apache_rhel_2_1_auth_modules

      - name: "NOTSCORED | 2.1 | AUDIT | Ensure Only Necessary Authentication and Authorization Modules Are Enabled | Capture LDAP modules"
        shell: httpd -M | egrep 'ldap'
        changed_when: false
        failed_when: false
        register: apache_rhel_2_1_ldap_modules

      - name: "NOTSCORED | 2.1 | AUDIT | Ensure Only Necessary Authentication and Authorization Modules Are Enabled | Display Modules"
        debug:
            msg:
                - "Warning! Below are the installed modules. Please review and remove any un-needed modules"
                - "Auth Modules:"
                - "{{ apache_rhel_2_1_auth_modules.stdout_lines }}"
                - "LDAP Modules"
                - "{{ apache_rhel_2_1_ldap_modules.stdout_lines }}"
  when:
      - apache_cis_2_1
      - apache_cis_section2
  tags:
      - level1
      - level2
      - notscored
      - audit
      - rule_2.1

- name: "SCORED | 2.2 | PATCH | Ensure the Log Config Module Is Enabled"
  block:
      - name: "SCORED | 2.2 | AUDIT | Ensure the Log Config Module Is Enabled | Check for Log Module configured"
        shell: cat {{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf | grep -i "LoadModule log_config_module"
        changed_when: false
        failed_when: false
        register: apache_rhel_2_2_log_config_module_base

      - name: "SCORED | 2.2 | PATCH | Ensure the Log Config Module Is Enabled | Enable Log Config Module"
        lineinfile:
            path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf'
            line: "LoadModule log_config_module modules/mod_log_config.so"
        notify: restart httpd
        when: '"log_config_module" not in apache_rhel_2_2_log_config_module_base.stdout'

      - name: "SCORED | 2.2 | PATCH | Ensure the Log Config Module Is Enabled | Enable Log Config Module"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
            regexp: '.*LoadModule log_config_module modules/mod_log_config.so'
            replace: "LoadModule log_config_module modules/mod_log_config.so"
        notify: restart httpd
        when: '"log_config_module" in apache_rhel_2_2_log_config_module_base.stdout'

  when:
      - apache_cis_2_2
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.2

- name: "SCORED | 2.3 | PATCH | Ensure the WebDAV Modules Are Disabled | Check for enabled WebDAV Module"
  replace:
      path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-dav.conf"
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
  with_items:
      - { regexp: '.*LoadModule dav_module modules/mod_dav.so', replace: '# LoadModule dav_module modules/mod_dav.so' }
      - { regexp: '.*LoadModule dav_fs_module modules/mod_dav_fs.so', replace: '# LoadModule dav_fs_module modules/mod_dav_fs.so' }
      - { regexp: '.*LoadModule dav_lock_module modules/mod_dav_lock.so', replace: '# LoadModule dav_lock_module modules/mod_dav_lock.so' }
  notify: restart httpd
  when:
      - apache_cis_2_3
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.3

- name: "SCORED | 2.4 | PATCH | Ensure the Status Module Is Disabled"
  replace:
      path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
      regexp: '.*LoadModule status_module modules/mod_status.so'
      replace: '## LoadModule status_module modules/mod_status.so'
  notify: restart httpd
  when:
      - apache_cis_2_4
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.4

- name: "SCORED | 2.5 | PATCH | Ensure the Autoindex Module Is Disabled"
  block:
      - name: "SCORED | 2.5 | PATCH | Ensure the Autoindex Module Is Disabled | Check for autoindex.conf"
        find:
            paths: "{{ apache_cis_server_root_dir }}"
            patterns: "autoindex.conf"
            recurse: yes
        register: apache_rhel_2_5_autoindex_status

      - name: "SCORED | 2.5 | PATCH | Ensure the Autoindex Module Is Disabled | Delete autoindex.conf"
        file:
            path: "{{ apache_rhel_2_5_autoindex_status.files[0].path }}"
            state: absent
        when: apache_rhel_2_5_autoindex_status.matched >=1

      - name: "SCORED | 2.5 | PATCH | Ensure the Autoindex Module Is Disabled"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
            regexp: '.*LoadModule autoindex_module modules/mod_autoindex.so'
            replace: '## LoadModule autoindex_module modules/mod_autoindex.so'
        notify: restart httpd
  when:
      - apache_cis_2_5
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.5

- name: "SCORED | 2.6 | PATCH | Ensure the Proxy Modules Are Disabled"
  block:
      - name: "SCORED | 2.6 | PATCH | Ensure the Proxy Modules Are Disabled"
        replace:
            path: "{{ item.path }}"
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
        with_items:
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_module modules/mod_proxy.so', replace: '# LoadModule proxy_module modules/mod_proxy.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so', replace: '# LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so', replace: '# LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so', replace: '# LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so', replace: '# LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_connect_module modules/mod_proxy_connect.so', replace: '# LoadModule proxy_connect_module modules/mod_proxy_connect.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_ftp_module modules/mod_proxy_ftp.so', replace: '# LoadModule proxy_ftp_module modules/mod_proxy_ftp.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_http_module modules/mod_proxy_http.so', replace: '# LoadModule proxy_http_module modules/mod_proxy_http.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so', replace: '# LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_scgi_module modules/mod_proxy_scgi.so', replace: '# LoadModule proxy_scgi_module modules/mod_proxy_scgi.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_ajp_module modules/mod_proxy_ajp.so', replace: '# LoadModule proxy_ajp_module modules/mod_proxy_ajp.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_balancer_module modules/mod_proxy_balancer.so', replace: '# LoadModule proxy_balancer_module modules/mod_proxy_balancer.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_express_module modules/mod_proxy_express.so', replace: '# LoadModule proxy_express_module modules/mod_proxy_express.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so', replace: '# LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so', replace: '# LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so', replace: '# LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so' }
            - { path: '{{ apache_cis_server_root_dir }}/conf.modules.d/00-proxy.conf', regexp: '.*LoadModule proxy_uwsgi_module modules/mod_proxy_uwsgi.so', replace: '# LoadModule proxy_uwsgi_module modules/mod_proxy_uwsgi.so' }
        notify: restart httpd
            
      - name: "SCORED | 2.6 | PATCH | Ensure the Proxy Modules Are Disabled | RHEL 8 extra line"
        replace:
            path: '{{ apache_cis_server_root_dir }}/conf.modules.d/10-proxy_h2.conf'
            regexp: '.*LoadModule proxy_http2_module modules/mod_proxy_http2.so'
            replace: '# LoadModule proxy_http2_module modules/mod_proxy_http2.so'
        notify: restart httpd
        when: ansible_facts.distribution_major_version == "8"
  when:
      - apache_cis_2_6
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.6

- name: "SCORED | 2.7 | PATCH | Ensure the User Directories Module Is Disabled"
  replace:
      path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
      regexp: '.*LoadModule userdir_module modules/mod_userdir.so'
      replace: '# LoadModule userdir_module modules/mod_userdir.so'
  notify: restart httpd
  when:
      - apache_cis_2_7
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.7

- name: "SCORED | 2.8 | PATCH | Ensure the Info Module Is Disabled"
  replace:
      path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
      regexp: '.*LoadModule info_module modules/mod_info.so'
      replace: '# LoadModule info_module modules/mod_info.so'
  notify: restart httpd
  when:
      - apache_cis_2_8
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.8

- name: "SCORED | 2.9 | PATCH | Ensure the Basic and Digest Authentication Modules are Disabled"
  replace:
      path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
  with_items:
      - { regexp: '.*LoadModule auth_basic_module modules/mod_auth_basic.so', replace: '# LoadModule auth_basic_module modules/mod_auth_basic.so' }
      - { regexp: '.*LoadModule auth_digest_module modules/mod_auth_digest.so', replace: '# LoadModule auth_digest_module modules/mod_auth_digest.so' }
  notify: restart httpd
  when:
      - apache_cis_2_9
      - apache_cis_section2
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_2.9

# Section 3 Fixes
# ----------------------------
# -----------------------------
# The service is stopped because if the service is running with the user you are trying to set the options for the task will fail since the user is associated with a process
# ------------------------------
# -----------------------------
- name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User"
  block:
      - name: "SCORED | 3.1 | AUDIT | Ensure the Apache Web Server Runs As a Non-Root User | Get configured user block"
        block:
            - name: "SCORED | 3.1 | AUDIT | Ensure the Apache Web Server Runs As a Non-Root User | Get configured user"
              shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep "User " -A1
              changed_when: false
              failed_when: false
              register: apache_rhel_3_1_configured_user_group
      
            - name: "SCORED | 3.1 | AUDIT | Ensure the Apache Web Server Runs As a Non-Root User | Warn about user"
              debug:
                  msg:
                      - "Warning! Below is the user and group for the apache service"
                      - "Please review to confirm it is a non-root user"
                      - "This task did not change the user information due to apache_cis_disruption_high being set to false"
                      - "Set that parameter to true and this task will create the user/group and configure as needed"
                      - "{{ apache_rhel_3_1_configured_user_group.stdout_lines }}"
              when: not apache_cis_disruption_high

      - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User"
        block:
            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Stop apache service"
              service:
                  name: httpd
                  state: stopped

            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Create Apache group"
              group:
                  name: "{{ apache_rhel_user }}"
                  system: yes
                  state: present

            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Create Apache user"
              user:
                  name: "{{ apache_rhel_group }}"
                  system: yes
                  group: apache
                  home: /var/www
                  shell: /sbin/nologin

            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Add user to configs"
              replace:
                  path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
                  regexp: "{{ item.regexp }}"
                  replace: "{{ item.replace }}"
              with_items:
                  - { regexp: 'User .*', replace: 'User {{ apache_rhel_user }}' }
                  - { regexp: 'Group .*', replace: 'Group {{ apache_rhel_group }}' }
            - name: "SCORED | 3.1 | PATCH | Ensure the Apache Web Server Runs As a Non-Root User | Start apache service"
              service:
                  name: httpd
                  state: started
        when: apache_cis_disruption_high
  when:
      - apache_cis_3_1
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.1

- name: "SCORED | 3.2 | PATCH | Ensure the Apache User Account Has an Invalid Shell"
  user:
      name: "{{ apache_rhel_user }}"
      shell: /sbin/nologin
  when:
      - apache_cis_3_2
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.2

- name: "SCORED | 3.3 | PATCH | Ensure the Apache User Account Is Locked"
  user:
      name: "{{ apache_rhel_user }}"
      password_lock: yes
  when:
      - apache_cis_3_3
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.3

- name: "SCORED | 3.4 | PATCH | Ensure Apache Directories and Files Are Owned By Root"
  file:
      name: "{{ apache_cis_server_root_dir }}"
      owner: root
      recurse: yes
  when:
      - apache_cis_3_4
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.4

- name: "SCORED | 3.5 | PATCH | Ensure the Group Is Set Correctly on Apache Directories and Files"
  file:
      name: "{{ apache_cis_server_root_dir }}"
      group: root
      recurse: yes
  when:
      - apache_cis_3_5
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.5

- name: "SCORED | 3.6 | PATCH | Ensure Other Write Access on Apache Directories and Files Is Restricted"
  file:
      name: "{{ apache_cis_server_root_dir }}"
      mode: o-w
      recurse: yes
  when:
      - apache_cis_3_6
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.6

- name: "SCORED | 3.7 | PATCH | Ensure the Core Dump Directory Is Secured"
  block:
      - name: "SCORED | 3.7 | AUDIT | Ensure the Core Dump Directory Is Secured | Find if CoreDumpDirectory is used"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep CoreDumpDirectory | cut -f2 -d " "
        changed_when: false
        failed_when: false
        register: apache_rhel_3_7_coredumpdirectory

      - name: "SCORED | 3.7 | AUDIT | Ensure the Core Dump Directory Is Secured | Find Web Document Root Dir"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep "DocumentRoot " | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: apache_rhel_3_7_docrootdir

      - name: "SCORED | 3.7 | AUDIT | Ensure the Core Dump Directory Is Secured | Message if CoreDumpDirectory is Web Document Root Dir"
        debug:
            msg: "WARNING!! Your CoreDumpDirectory is using the Web Document Root directory: {{ apache_cis_3_7_coredumpdirectory.stdout }}"
        when: 
            - apache_rhel_3_7_coredumpdirectory.stdout != ""
            - apache_rhel_3_7_coredumpdirectory.stdout == apache_cis_3_7_docrootdir.stdout

      - name: "SCORED | 3.7 | PATCH | Ensure the Core Dump Directory Is Secured"
        file:
            name: /var/log/httpd
            owner: root
            group: apache
            mode: o-rwx
            recurse: yes
  when:
      - apache_cis_3_7
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.7

# LockFile is no longer the valid parameter, it was replaced with Mutex File
- name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured"
  block:
      - name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured | Add LockFile directive if needed"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^LockFile|^Mutex File'
            line: 'Mutex File:{{ apache_cis_lockfile_location }} default'
            insertafter: '# Supplemental configuration'

      - name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured | Create LockFile in new location and set permissions if does not exist"
        file:
            path: "{{ apache_cis_lockfile_location }}/httpd.lock"
            owner: root
            group: root
            mode: '0750'
            state: touch

      - name: "SCORED | 3.8 | PATCH | Ensure the Lock File Is Secured | Set LockFile permissions"
        file:
            path: "{{ apache_cis_lockfile_location }}/httpd.lock"
            owner: root
            group: root
            mode: '0750'
  when:
      - apache_cis_3_8
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.8

- name: "SCORED | 3.9 | PATCH | Ensure the Pid File Is Secured"
  block:
      - name: "SCORED | 3.9 | AUDIT | Ensure the Pid File Is Secured | Get PID location"
        shell: find / -name httpd.pid
        changed_when: false
        failed_when: false
        register: apache_rhel_3_9_httpd_pid_loc

      - name: "SCORED | 3.9 | PATCH | Ensure the Pid File Is Secured | Set permissions"
        file:
            path: "{{ apache_rhel_3_9_httpd_pid_loc.stdout }}"
            owner: root
            group: root
            mode: o-w,g-w

      - name: "SCORED | 3.9 | AUDIT | Ensure the Pid File Is Secured | Warn if PID is in DocumentRoot dir"
        debug:
            msg:
                - "WARNING!! Your PID file is in the DocumentRoot directory, to confirm with this STIG control"
                - "please move to another folder that is not within the Document root directory ({{ apache_cis_doc_root_dir.stdout }})"
        when: apache_cis_doc_root_dir == apache_rhel_3_9_httpd_pid_loc.stdout
  when:
      - apache_cis_3_9
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.9

# -----------------------------
# -----------------------------
# Missing last step to confirm ScoreBoardFile location is not on an externally mounted NFS system. Need to review how to do that
# -----------------------------
# -----------------------------
- name: "SCORED | 3.10 | PATCH | Ensure the ScoreBoard File Is Secured"
  block:
      - name: "SCORED | 3.10 | AUDIT | Ensure the ScoreBoard File Is Secured | Check if ScoreBoardFile is in use"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep ScoreBoardFile | cut -f2 -d" "
        changed_when: false
        failed_when: false
        register: apache_rhel_3_10_scoreboardfile

      - name: "SCORED | 3.10 | AUDIT | Ensure the ScoreBoard File Is Secured | Warn if the same as DocumentRoot"
        debug:
            msg:
                - "WARNING!! The ScoreBoardFile parameter is in use using the DocumentRoot location"
                - "This does not conform to CIS standars. Please change the ScoreBoardFile location in {{ apache_cis_server_root_dir }}/conf/httpd.conf"
        when: 
            - '"{{ apache_cis_doc_root_dir }}" in apache_rhel_3_10_scoreboardfile.stdout'

      - name: "SCORED | 3.10 | PATCH | Ensure the ScoreBoard File Is Secured | Update file permissions"
        file:
            path: "{{ apache_cis_3_10_scoreboardfile.stdout }}"
            owner: root
            group: root
            mode: o-w,g-w
        when: apache_rhel_3_10_scoreboardfile.stdout != ""
  when:
      - apache_cis_3_10
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.10
      - notimplimented

- name: "SCORED | 3.11 | PATCH | Ensure Group Write Access for the Apache Directories and Files Is Properly Restricted"
  file:
      path: "{{ apache_cis_server_root_dir }}"
      mode: g-w
      recurse: yes
  when:
      - apache_cis_3_11
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.11

- name: "SCORED | 3.12 | PATCH | Ensure Group Write Access for the Document Root Directories and Files Is Properly Restricted"
  file:
      path: "{{ apache_cis_doc_root_dir }}"
      mode: g-w
      recurse: yes
  when:
      - apache_cis_3_12
      - apache_cis_section3
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_3.12

# -----------------------------
# -----------------------------
# Control 3.13 circle back since I'm not sure what is needed here. You are setting values but I can't figure out where those configurations are located
# -----------------------------
# -----------------------------

- name: "NOTSCORED | 3.13 | PATCH | Ensure Access to Special Purpose Application Writable Directories is Properly Restricted"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_3_13
      - apache_cis_section3
  tags:
      - level1
      - level2
      - notscored
      - patch
      - rule_3.13
      - notimplimented

# Section 4 Fixes
- name: "SCORED | 4.1 | PATCH | Ensure Access to OS Root Directory Is Denied By Default"
  block:
      - name: "SCORED | 4.1 | AUDIT | Ensure Access to OS Root Directory Is Denied By Default | Get Root Directory"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | sed -n '/<Directory \//,/<\/Directory/p'
        changed_when: false
        failed_when: false
        register: apache_rhel_4_1_root_directory

      - name: "SCORED | 4.1 | PATCH | Ensure Access to OS Root Directory Is Denied By Default | Repace Require if exists"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '    Require .*'
            replace: '    Require all denied'
            after: '<Directory />'
            before: '</Directory>'
        notify: restart httpd
        when: '"Require" in apache_rhel_4_1_root_directory.stdout'

      - name: "SCORED | 4.1 | PATCH | Ensure Access to OS Root Directory Is Denied By Default | Enter Require if it doesn't exist"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '<Directory />'
            line: |
                <Directory />
                    Require all denied
        notify: restart httpd
        when: '"Require" not in apache_rhel_4_1_root_directory.stdout'
  when:
      - apache_cis_4_1
      - apache_cis_section4
  tags:
      - level1
      - level2
      - patch
      - rule_4.1

# -----------------------------
# -----------------------------
# Control 4.2 requires dynamic changes to all <Directory> and <Location> elements. Need to figure out best lineinfile way to handle this
# -----------------------------
# -----------------------------

- name: "NOTSCORED | 4.2 | PATCH | Ensure Appropriate Access to Web Content Is Allowed"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_4_2
      - apache_cis_section4
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_4.2
      - notimplimented


- name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory"
  block:
      - name: "SCORED | 4.3 | AUDIT | Ensure OverRide Is Disabled for the OS Root Directory | Get Root Directory"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | sed -n '/<Directory \//,/<\/Directory/p'
        changed_when: false
        failed_when: false
        register: apache_rhel_4_3_root_directory

      - name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory | Repace AllowOverride if exists"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '    AllowOverride .*'
            replace: '    AllowOverride None'
            after: '<Directory />'
            before: '</Directory>'
        notify: restart httpd
        when: '"AllowOverride" in apache_rhel_4_3_root_directory.stdout'

      - name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory | Enter AllowOverride if it doesn't exist"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '<Directory />'
            line: |
                <Directory />
                    AllowOverride None
        notify: restart httpd
        when: '"AllowOverride" not in apache_rhel_4_3_root_directory.stdout'

      - name: "SCORED | 4.3 | PATCH | Ensure OverRide Is Disabled for the OS Root Directory | Remove AllowOverrideList element"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: 'AllowOverrideList .*'
            state: absent
        notify: restart httpd
  when:
      - apache_cis_4_3
      - apache_cis_section4
  tags:
      - level1
      - level2
      - patch
      - rule_4.3

- name: "SCORED | 4.4 | PATCH | Ensure OverRide Is Disabled for All Directories"
  block:
      - name: "SCORED | 4.4 | PATCH | Ensure OverRide Is Disabled for All Directories | Set AllowOverride to None"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^    AllowOverride.*'
            replace: '    AllowOverride None'
        notify: restart httpd

      - name: "SCORED | 4.4 | PATCH | Ensure OverRide Is Disabled for All Directories | Remove AllowOverrideList"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^    AllowOverrideList'
            state: absent
        notify: restart httpd
  when:
      - apache_cis_4_4
      - apache_cis_section4
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_4.4

# Section 5 Fixes
- name: "SCORED | 5.1 | PATCH | Ensure Options for the OS Root Directory Are Restricted"
  block:
      - name: "SCORED | 5.1 | AUDIT | Ensure Options for the OS Root Directory Are Restricted | Get Root Directory Settings"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | sed -n '/<Directory \//,/<\/Directory/p'
        changed_when: false
        failed_when: false
        register: apache_rhel_5_1_root_directory

      - name: "SCORED | 5.1 | PATCH | Ensure Options for the OS Root Directory Are Restricted | Replace if Options exist"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '    Options .*'
            replace: '    Options None'
            after: '<Directory />'
            before: '</Directory>'
        notify: restart httpd
        when: '"Options" in apache_rhel_5_1_root_directory.stdout'

      - name: "SCORED | 5.1 | PATCH | Ensure Options for the OS Root Directory Are Restricted | Enter Options if doesn't exist"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '<Directory />'
            line: |
                <Directory />
                    Options None
        notify: restart httpd
        when: '"Options" not in apache_rhel_5_1_root_directory.stdout'
  when:
      - apache_cis_5_1
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.1

- name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted"
  block:
      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Get Document Root vHost settings"
        raw: cat /etc/httpd/conf/httpd.conf | sed -n "/<Directory \"\/var\/www\/html\">/,/<\/Directory>/p"
        changed_when: false
        failed_when: false
        register: apache_rhel_5_2_vdir_doc_settings

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Get Document Root vHost settings"
        raw: cat /etc/httpd/conf/httpd.conf
        changed_when: false
        failed_when: false
        register: test

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Escape path slashes"
        set_fact:
            apache_rhel_5_2_doc_root_dir: '{{ apache_cis_doc_root_dir | replace("/","\/") }}'

      # - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Escape path slashes"
      #   set_fact:
      #       test_after: "{{ test | regex_search('<Directory \"\/var\/www\/html\">([\\s\\S]*?)<\/Directory>', multiline=True) }}"
      - debug: var=apache_rhel_5_2_vdir_doc_settings
      - debug: var=apache_rhel_5_2_doc_root_dir
      - debug: var=test_after

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Set options to None or Multiviews if options does not exist"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            line: '    Options {{ apache_cis_webrootdir_options }}'
            insertafter: '^<Directory "{{ apache_cis_doc_root_dir }}>'
        when: "'Options' not in apache_rhel_5_2_vdir_doc_settings.stdout"

      - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Get Document Root vHost settings"
        shell: cat /etc/httpd/conf/httpd.conf | sed -n "/<Directory "{{ apache_rhel_5_2_doc_root_dir }}">/,/<\/Directory>/p"
        changed_when: false
        failed_when: false
        register: apache_rhel_5_2_vdir_doc_settings_2222222

      - debug: var=apache_rhel_5_2_vdir_doc_settings_2222222
      # - name: "SCORED | 5.2 | PATCH | Ensure Options for the Web Root Directory Are Restricted | Set options to None or Multiviews if options does not exist"
      #   replace:
      #       path: "{{ apache_cis_server_root_dir }}"
      #       replace: '    Options.*'
      #       replace: '    Options {{ apache_cis_webrootdir_options }}'
      #       after: '^<Directory "{{ apache_cis_doc_root_dir }}">'
      #       before: '^</Directory>'
  when:
      - apache_cis_5_2
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.2
      - notimplimented

# -----------------------------
# -----------------------------
# Control 5.3/5.4 requires dynamic changes to all <Directory> elements. Need to figure out best lineinfile way to handle this
# -----------------------------
# -----------------------------
- name: "SCORED | 5.3 | PATCH | Ensure Options for Other Directories Are Minimized"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_5_3
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.3
      - notimplimented

- name: "SCORED | 5.4 | PATCH | Ensure Default HTML Content Is Removed"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_5_4
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.4
      - notimplimented

- name: "SCORED | 5.5 | PATCH | Ensure the Default CGI Content printenv Script Is Removed"
  block:
      - name: "SCORED | 5.5 | AUDIT | Ensure the Default CGI Content printenv Script Is Removed | Get CGI folder"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep -i "cgi-bin/" | grep -v "#" | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: apache_rhel_5_5_cgi_bin_dir

      - name: "SCORED | 5.5 | PATCH | Ensure the Default CGI Content printenv Script Is Removed | Remove printenv"
        file:
            path: "{{ item }}/printenv"
            state: absent
        with_items:
            - "{{ apache_rhel_5_5_cgi_bin_dir.stdout_lines }}"
  when:
      - apache_cis_5_5
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.5

- name: "SCORED | 5.6 | PATCH | Ensure the Default CGI Content test-cgi Script Is Removed"
  block:
      - name: "SCORED | 5.6 | AUDIT | Ensure the Default CGI Content test-cgi Script Is Removed | Get CGI folder"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep -i "cgi-bin/" | grep -v "#" | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: apache_rhel_5_6_cgi_bin_dir

      - name: "SCORED | 5.6 | PATCH | Ensure the Default CGI Content test-cgi Script Is Removed | Remove test-cgi folder"
        file:
            path: "{{ item }}/test-cgi"
            state: absent
        with_items:
            - "{{ apache_rhel_5_6_cgi_bin_dir.stdout_lines }}"
  when:
      - apache_cis_5_6
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.6

# -----------------------------
# -----------------------------
# Control 5.7requires dynamic changes to all <Directory> elements. Need to figure out best lineinfile way to handle this
# -----------------------------
# -----------------------------
- name: "SCORED | 5.7 | PATCH | Ensure HTTP Request Methods Are Restricted"
  block:
      - name: "SCORED | 5.7 | PATCH | Ensure HTTP Request Methods Are Restricted"
        shell: 'cat /etc/httpd/conf/httpd.conf | sed -n "/<Directory \"\/var\/www\/html\">/,/<\/Directory>/p"'
        changed_when: false
        failed_when: false
        register: apache_rhel_5_7_vdir_doc_settings
  when:
      - apache_cis_5_7
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.7
      - notimplimented

- name: "SCORED | 5.8 | PATCH | Ensure the HTTP TRACE Method Is Disabled"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: 'TraceEnable.*'
      line: 'TraceEnable Off'
  notify: restart httpd
  when:
      - apache_cis_5_8
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.8

- name: "SCORED | 5.9 | PATCH | Ensure Old HTTP Protocol Versions Are Disallowed"
  block:
      - name: "SCORED | 5.9 | PATCH | Ensure Old HTTP Protocol Versions Are Disallowed | Enable re-write module"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
            regexp: '.*LoadModule rewrite_module modules/mod_rewrite.so'
            line: 'LoadModule rewrite_module modules/mod_rewrite.so'
        notify: restart httpd

      - name: "SCORED | 5.9 | PATCH | Ensure Old HTTP Protocol Versions Are Disallowed | Set re-write settings"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: '# Supplemental configuration'
        notify: restart httpd
        with_items:
            - { regexp: 'RewriteEngine .*', line: 'RewriteEngine On' }
            - { regexp: 'RewriteOptions .*', line: 'RewriteOptions Inherit'}
            - { regexp: 'RewriteCond .*', line: 'RewriteCond %{THE_REQUEST} !HTTP/1\.1$' }
            - { regexp: 'RewriteRule .*', line: 'RewriteRule .* - [F]' }
  when:
      - apache_cis_5_9
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.9

- name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted"
  block:
      - name: "SCORED | 5.10 | AUDIT | Ensure Access to .ht* Files Is Restricted | Does FilesMatch exist"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep -ozP '<FilesMatch \"\^\\.ht\">([\S\s]*?)<\/FilesMatch>'
        changed_when: false
        failed_when: false
        register: apache_rhel_5_10_files_match_param

      - name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted | Replace Require all setting"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '    Require.*'
            replace: '    Require all denied'
            after: '<FilesMatch "\^\\.ht">'
            before: '</FilesMatch>'
        notify: restart httpd
        when: 
            - '"Require" in apache_rhel_5_10_files_match_param.stdout'

      - name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted | Add Require setting if missing"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '<FilesMatch "\^\\.ht">'
            line: |
                <FilesMatch "^\.ht">
                    Require all denied
        notify: restart httpd
        when:
            - apache_rhel_5_10_files_match_param.stdout != ""
            - '"Require" not in apache_rhel_5_10_files_match_param.stdout'

      - name: "SCORED | 5.10 | PATCH | Ensure Access to .ht* Files Is Restricted | Add FilesMatch settings"
        blockinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            marker: "# {mark} FilesMatch ht Setting ANSIBLE MANAGED BLOCK"
            block: |
                <FilesMatch "^\.ht">
                    Require all denied
                </FilesMatch>
        notify: restart httpd
        when: apache_rhel_5_10_files_match_param.stdout == ""
  when:
      - apache_cis_5_10
      - apache_cis_section5
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_5.10

- name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted"
  block:
      - name: "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Gather file extentions"
        shell: find * {{ apache_cis_doc_root_dir }} -type f -name '*.*' | awk -F. '{print $NF }' | sort -u
        changed_when: false
        failed_when: false
        register: apache_rhel_5_11_file_extentions

      - name: "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Find FilesMatch for all files"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep -ozP '<FilesMatch \"\^\.\*\$\">([\S\s]*?)<\/FilesMatch>'
        changed_when: false
        failed_when: false
        register: apache_rhel_5_11_files_match_1

      - name:  "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Find FilesMatch for specified files"
        shell: cat {{ apache_cis_server_root_dir }}/conf/httpd.conf | grep -ozP '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>([\S\s]*?)<\/FilesMatch>'
        changed_when: false
        failed_when: false
        register: apache_rhel_5_11_files_match_2

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Replace Require in FilesMatch for all files"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '    Require.*'
            replace: '    Require all denied'
            after: '<FilesMatch "\^\.\*\$">'
            before: '</FilesMatch>'
        when: '"Require" in apache_rhel_5_11_files_match_1.stdout'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add Require in FilesMatch for all files"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '<FilesMatch "\^\.\*\$">'
            line: |
                <FilesMatch "^.*$">
                    Require all denied
        when: '"Require" not in apache_rhel_5_11_files_match_1.stdout and apache_rhel_5_11_files_match_1.stdout != ""'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add FilesMatch for all files if missing"
        blockinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            marker: "# {mark} FilesMatch All Settings ANSIBLE MANAGED BLOCK"
            block: |
                # Block all files by default, unless specifically allowed.
                <FilesMatch "^.*$">
                    Require all denied
                </FilesMatch>
        when: apache_rhel_5_11_files_match_1.stdout == ""

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Set allowed file types"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>'
            replace: '<FilesMatch "^.*\.({{ apache_cis_allowed_filetypes }})$">'
        when: '"<FilesMatch" in apache_rhel_5_11_files_match_2.stdout'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Replace Require for allowed file types"
        replace:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '    Require.*'
            replace: '    Require all granted'
            after: '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>'
            before: '</FilesMatch>'
        when: '"Require" in apache_rhel_5_11_files_match_2.stdout'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add Require for allowed file types"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '<FilesMatch \"\^\.\*\\.\(.*\)\$\"\>'
            line: |
                <FilesMatch "^.*\.({{ apache_cis_allowed_filetypes }})$">
                    Require all granted
        when: '"Require" not in apache_rhel_5_11_files_match_2.stdout and apache_rhel_5_11_files_match_2.stdout != ""'

      - name: "SCORED | 5.11 | PATCH | Ensure Access to Inappropriate File Extensions Is Restricted | Add FilesMatch for allowed files if missing"
        blockinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            marker: "# {mark} FilesMatch File Type Settings ANSIBLE MANAGED BLOCK"
            block: |
                # Allow files with specifically approved file extensions
                # Such as (css, htm; html; js; pdf; txt; xml; xsl; ...),
                # images (gif; ico; jpeg; jpg; png; ...), multimedia
                <FilesMatch "^.*\.({{ apache_cis_allowed_filetypes }})$">
                    Require all granted
                </FilesMatch>
        when: apache_rhel_5_11_files_match_2.stdout == ""

      - name: "SCORED | 5.11 | AUDIT | Ensure Access to Inappropriate File Extensions Is Restricted | Display file extensions"
        debug:
            msg:
                - "Alert!! Below are the file extensions in use. Please review to make sure they are all approved"
                - "{{ apache_rhel_5_11_file_extentions.stdout_lines }}"
  when:
      - apache_cis_5_11
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.11

- name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed"
  block:
      - name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed | Enable re-write module"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
            regexp: '.*LoadModule rewrite_module modules/mod_rewrite.so'
            line: 'LoadModule rewrite_module modules/mod_rewrite.so'

      - name: "SCORED | 5.12 | PATCH | Ensure IP Address Based Requests Are Disallowed | Set re-write settings"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: '# Supplemental configuration'
        with_items:
            - { regexp: 'RewriteEngine .*', line: 'RewriteEngine On'}
            - { regexp: 'RewriteCond %{HTTP_HOST}.*', line: 'RewriteCond %{HTTP_HOST} !^{{ apache_cis_toplevel_svr }} [NC]' }
            - { regexp: 'RewriteCond %{REQUEST_URI}.*', line: 'RewriteCond %{REQUEST_URI} !^/error [NC]' }
            - { regexp: 'RewriteRule \^\.\(\.\*\).*', line: 'RewriteRule ^.(.*) - [L,F]' }
  when:
      - apache_cis_5_12
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.12

- name: "SCORED | 5.13 | PATCH | Ensure the IP Addresses for Listening for Requests Are Specified"
  block:
      - name: "SCORED | 5.13 | PATCH | Ensure the IP Addresses for Listening for Requests Are Specified | Remove Listen"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^Listen.*'
            state: absent
        notify: restart httpd

      - name: "SCORED | 5.13 | PATCH | Ensure the IP Addresses for Listening for Requests Are Specified"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            line: 'Listen {{ item }}'
            insertafter: '# prevent Apache from glomming onto all bound IP addresses'
        with_items:
            - "{{ apache_cis_listen_ip_port }}"
        notify: restart httpd
  when:
      - apache_cis_5_13
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.13

- name: "SCORED | 5.14 | PATCH | Ensure Browser Framing Is Restricted"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^Header.*'
      line: 'Header always append X-Frame-Options SAMEORIGIN'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_5_14
      - apache_cis_section5
  tags:
      - level2
      - scored
      - patch
      - rule_5.14

# Section 6 Fixes
- name: |
        "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly"
        "SCORED | 6.2 | PATCH | Ensure a Syslog Facility Is Configured for Error Logging"
  block:
      - name: "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Add LogLevel setting"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^LogLevel'
            line: 'LogLevel {{ apache_cis_loglevel.all_mods }} core:{{ apache_cis_loglevel.core_mod }}'
            insertafter: '# Supplemental configuration'
        when:
            - apache_cis_6_1

      - name: "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Add ErrorLog path"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^ErrorLog'
            line: 'ErrorLog "{{ apache_cis_errorlog_path }}"'
            insertafter: '# Supplemental configuration'
        when:
            - apache_cis_6_1
            - not apache_cis_6_2

      - name: "SCORED | 6.2 | PATCH | Ensure a Syslog Facility Is Configured for Error Logging | Add ErrorLog path set to system:local1"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^ErrorLog'
            line: 'ErrorLog "syslog:{{ apache_cis_errorlog_facility }}"'
            insertafter: '# Supplemental configuration'
        when:
            - apache_cis_6_2
            - not apache_cis_6_1

      - name: |
              "SCORED | 6.1 | PATCH | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Add combined ErrorLog"
              "SCORED | 6.2 | PATCH | Ensure a Syslog Facility Is Configured for Error Logging | Add combined ErrorLog"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^ErrorLog.*'
            line: 'ErrorLog "{{ apache_cis_errorlog_path }} syslog:{{ apache_cis_errorlog_facility }}"'
            insertafter: '# Supplemental configuration'
        when:
            - apache_cis_6_1
            - apache_cis_6_2

      - name: "SCORED | 6.1 | AUDIT | Ensure the Error Log Filename and Severity Level Are Configured Correctly | Alert about virtual Directories"
        debug:
            msg:
                - "Caution!! If you are using virutal directories please add the ErrorLog directive."
                - "Each responsible individual or organization needs to access their own web logs and and needs the"
                - "skills/training/tools for monitoring the logs."
  when:
      - apache_cis_6_1 or apache_cis_6_2
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.1
      - rule_6.2

- name: "SCORED | 6.3 | PATCH | Ensure the Server Access Log Is Configured Correctly"
  block:
      - name: "SCORED | 6.3 | PATCH | Ensure the Server Access Log Is Configured Correctly | Remove LogFormat"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^    LogFormat .*'
            state: absent

      - name: "SCORED | 6.3 | PATCH | Ensure the Server Access Log Is Configured Correctly | Add/Modify LogFormat and CustomLog"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: '<IfModule log_config_module>'
        notify: restart httpd
        with_items:
            - { regexp: '^    LogFormat "', line: '    LogFormat {{ apache_cis_log_format }} combined' }
            - { regexp: '^    CustomLog .*', line: '    CustomLog "{{ apache_cis_custom_log }}" combined' }

      - name: "SCORED | 6.3 | AUDIT | Ensure the Server Access Log Is Configured Correctly | Notify about need for vhost logging"
        debug:
            msg:
                - "Caution!! If you are using virtual directories please add the LogFormat and and CustomLog directives"
                - "if you have different people responsible for each web site. Each responsible individual or organization"
                - "needs access to their own web logs as well as the skills/training/tools for monitoring the logs"
  when:
      - apache_cis_6_3
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.3

- name: "SCORED | 6.4 | PATCH | Ensure Log Storage and Rotation Is Configured Correctly"
  block:
      - name: "SCORED | 6.4 | PATCH | Ensure Log Storage and Rotation Is Configured Correctly | Edit logrotate.d/httpd"
        lineinfile:
            path: /etc/logrotate.d/httpd
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter }}"
        with_items:
            - { regexp: '^    missingok', line: '    missingok', insertafter: '^/var/log/httpd/' }
            - { regexp: '^    notifempty', line: '    notifempty', insertafter: '^/var/log/httpd/' }
            - { regexp: '^    sharedscripts', line: '    sharedscripts', insertafter: '^/var/log/httpd/' }
            - { regexp: '^    postrotate', line: '    postrotate', insertafter: '^/var/log/httpd/' }
            - { regexp: '^        /bin', line: "        /bin/kill -HUP 'cat /var/run/httpd.pid 2>/dev/null' 2> /dev/null || true", insertafter: '    postrotate' }

      - name: "SCORED | 6.4 | PATCH | Ensure Log Storage and Rotation Is Configured Correctly | Edit logrotate.conf"
        lineinfile:
            path: /etc/logrotate.conf
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter }}"
        with_items:
            - { regexp: '^# rotate log files ', line: '# rotate log files weekly', insertafter: '^# see' }
            - { regexp: '^daily|weekly|monthly|yearly', line: 'weekly', insertafter: '^# rotate log files' }
            - { regexp: '^# keep ([^\s]+) ([^\s]+) worth of backlogs', line: '# keep 13 weeks worth of backlogs', insertafter: '^# see'}
            - { regexp: '^rotate', line: 'rotate 13', insertafter: '^# keep'}
  when:
      - apache_cis_6_4
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.4

- name: "SCORED | 6.5 | PATCH | Ensure Applicable Patches Are Applied"
  block:
      - name: "SCORED | 6.5 | PATCH | Ensure Applicable Patches Are Applied | RHEL 7"
        yum:
            name: ['httpd', 'mod_session', 'mod_ssl']
            state: latest
        when: ansible_distribution_major_version|int <= 7

      - name: "SCORED | 6.5 | PATCH | Ensure Applicable Patches Are Applied | RHEL 8"
        dnf:
            name: ['httpd', 'mod_session', 'mod_ssl']
            state: latest
        when: ansible_distribution_major_version|int >= 8
  when:
      - apache_cis_6_4
      - apache_cis_section6
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_6.4

- name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled"
  block:
      - name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled | RHEL 7 Install mod_security"
        yum:
            name: mod_security
            state: present
        when: ansible_distribution_major_version|int <= 7

      - name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled | RHEL 8 Install mod_security"
        dnf:
            name: mod_security
            state: present
        when: ansible_distribution_major_version|int >= 8

      - name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled | Find LoadModule for mod_security"
        shell: 'grep -ri "LoadModule security2" {{ apache_cis_server_root_dir }} | cut -f1 -d:'
        changed_when: false
        failed_when: false
        register: apache_rhel_6_6_sec_mod_path

      - name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled | Load module if not currently set"
        lineinfile:
            path: "{{ apache_rhel_6_6_sec_mod_path.stdout }}"
            regexp: 'LoadModule security2_module modules/mod_security2.so'
            line: 'LoadModule security2_module modules/mod_security2.so'
            insertbefore: BOF
        when: apache_rhel_6_6_sec_mod_path.stdout != ""

      - name: "SCORED | 6.6 | PATCH | Ensure ModSecurity Is Installed and Enabled | Create load config if needed"
        lineinfile:
            path: /etc/httpd/conf.modules.d/10-mod_security.conf
            regexp: 'LoadModule security2_module modules/mod_security2.so'
            line: 'LoadModule security2_module modules/mod_security2.so'
            insertbefore: BOF
            create: yes
        when: apache_rhel_6_6_sec_mod_path.stdout == ""
  when:
      - apache_cis_6_6
      - apache_cis_section6
  tags:
      - level2
      - scored
      - patch
      - rule_6.6

- name: "SCORED | 6.7 | PATCH | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled"
  block:
      - name: "SCORED | 6.7 | AUDIT | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Determine if OWASP is installed"
        find:
            paths: "{{ apache_cis_server_root_dir }}"
            patterns: 'crs-setup.conf'
            recurse: yes
            file_type: file
        register: apache_rhel_6_7_owasp_config

      - name: "SCORED | 6.7 | PATCH | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Install OWASP RHEL8"
        dnf:
            name: mod_security_crs
            state: present
        when: 
            - ansible_distribution_major_version|int >= 8
            - apache_rhel_6_7_owasp_config.matched == 0
            - apache_cis_owasp_automate

      - name: "SCORED | 6.7 | PATCH | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Install OWASP RHEL7"
        yum:
            name: mod_security_crs
            state: present
        when:
            - ansible_distribution_major_version|int <= 7
            - apache_rhel_6_7_owasp_config.matched == 0
            - apache_cis_owasp_automate

      - name: "SCORED | 6.7 | PATCH | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Apply Configuration"
        template:
            src: crs-setup.conf.j2
            dest: "{{ apache_cis_server_root_dir }}/modsecurity.d/crs-setup.conf"
        when:
            - apache_cis_owasp_automate

      - name: "SCORED | 6.7 | AUDIT | Ensure the OWASP ModSecurity Core Rule Set Is Installed and Enabled | Message out when not automated"
        debug:
            msg:
                - "ALERT!!!!To conform to CIS standards you need OWASP installed and enabled"
                - "Please go through the process of setup"
        when: not apache_cis_owasp_automate
  when:
      - apache_cis_6_7
      - apache_cis_section6
  tags:
      - level2
      - scored
      - audit
      - rule_6.7

# Section 7 Fixes
- name: "SCORED | 7.1 | PATCH | Ensure mod_ssl and/or mod_nss Is Installed"
  block:
      - name: "SCORED | 7.1 | PATCH | Ensure mod_ssl and/or mod_nss Is Installed | RHEL 7 Install mod_ssl"
        yum:
            name: mod_ssl
            state: present
        when: ansible_distribution_major_version|int <= 7

      - name: "SCORED | 7.1 | PATCH | Ensure mod_ssl and/or mod_nss Is Installed | RHEL 8 Install mod_ssl"
        dnf:
            name: mod_ssl
            state: present
        when: ansible_distribution_major_version|int >= 8
  when:
      - apache_cis_7_1
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.1


# -----------------------------
# -----------------------------
# This contral has 13 steps in the remediation. I think this is the simplest way to handle it
# -----------------------------
# -----------------------------

- name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed"
  block:
      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Generate private key"
        openssl_privatekey:
            path: "/etc/ssl/certs/{{ apache_cis_hostname_cert }}.key"
            cipher: aes128
            size: 2048
            passphrase: "{{ apache_cis_privatekey_passphrase }}"
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Convert to clear text"
        command: openssl rsa -in /etc/ssl/certs/{{ apache_cis_hostname_cert }}.key -out /etc/ssl/certs/{{ apache_cis_hostname_cert }}.clear -passin pass:{{ apache_cis_privatekey_passphrase }}
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Create CSR folder"
        file:
            path: "{{ apache_cis_csr_folder }}"
            state: directory
            mode: '0755'
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Create CSR"
        openssl_csr:
            path: "{{ apache_cis_csr_folder }}/{{ apache_cis_hostname_cert}}.csr"
            privatekey_path: /etc/ssl/certs/{{ apache_cis_hostname_cert }}.key
            privatekey_passphrase: "{{ apache_cis_privatekey_passphrase }}"
            country_name: "{{ apache_req_distinguished_name_settings.countryName_default }}"
            state_or_province_name: "{{ apache_req_distinguished_name_settings.stateOrProvinceName_default }}"
            locality_name: "{{ apache_req_distinguished_name_settings.localityName_default }}"
            organization_name: "{{ apache_req_distinguished_name_settings.organizationName_default }}"
            organizational_unit_name: "{{ apache_req_distinguished_name_settings.organizationalUnitName_default }}"
            common_name: "{{ apache_req_distinguished_name_settings.commonName_default }}"
            email_address: "{{ apache_req_distinguished_name_settings.email_address }}"
            subject_alt_name: "{{ apache_cis_alt_names | list }}"
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Send CSR to Certificate Authority"
        openssl_certificate:
            path: "/etc/ssl/certs/{{ apache_cis_hostname_cert }}.crt"
            privatekey_path: "/etc/ssl/certs/{{ apache_cis_hostname_cert }}.key"
            privatekey_passphrase: "{{ apache_cis_privatekey_passphrase }}"
            csr_path: "{{ apache_cis_csr_folder }}/{{ apache_cis_hostname_cert }}.csr"
            provider: selfsigned
            mode: '0444'
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Modify ssl.conf, self signed"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.d/ssl.conf"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        with_items:
            - { regexp: '^SSLCertificateFile', line: 'SSLCertificateFile /etc/ssl/certs/{{ apache_cis_hostname_cert }}.crt' }
            - { regexp: '^SSLCertificateKeyFile', line: 'SSLCertificateKeyFile /etc/ssl/certs/{{ apache_cis_hostname_cert }}.clear' }
        notify: restart httpd
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Copy custom CA's over"
        copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: '0444'
        with_items:
            - { src: "custom_cert/custom_cert_file.crt", dest: "/etc/ssl/certs/custom_cert_file.crt" }
            - { src: "custom_cert/custom_cert_key.key", dest: "/etc/ssl/certs/custom_certkey.key" }
        when: apache_cis_custom_cert

      - name: "SCORED | 7.2 | PATCH | Ensure a Valid Trusted Certificate Is Installed | Modify ssl.conf, custom cert"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.d/ssl.conf"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        with_items:
            - { regexp: '^SSLCertificateFile', line: 'SSLCertificateFile /etc/ssl/certs/custom_cert_file.crt' }
            - { regexp: '^SSLCertificateKeyFile', line: 'SSLCertificateKeyFile /etc/ssl/certs/custom_cert_key.key' }
        notify: restart httpd
        when: apache_cis_custom_cert
  when:
      - apache_cis_7_2
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.2

- name: "SCORED | 7.3 | PATCH | Ensure the Server's Private Key Is Protected"
  block:
      - name: "SCORED | 7.3 | AUDIT | Ensure the Server's Private Key Is Protected | Find config files with SSLCertificateFile parameter"
        shell: "grep -r SSLCertificateFile {{ apache_cis_server_root_dir }}/* | grep -v Binary | cut -f1 -d: | sort --unique"
        changed_when: false
        failed_when: false
        register: apache_rhel_7_3_sslcertificatefile_location

      - name: "SCORED | 7.3 | PATCH | Ensure the Server's Private Key Is Protected | Enforce SSLCertificateKeyFile is configured (selfsigned)"
        lineinfile:
            path: "{{ item }}"
            regexp: '^SSLCertificateKeyFile'
            line: 'SSLCertificateKeyFile /etc/ssl/certs/{{ apache_cis_hostname_cert }}.clear'
        with_items:
            - "{{ apache_rhel_7_3_sslcertificatefile_location.stdout_lines }}"
        notify: restart httpd
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.3 | PATCH | Ensure the Server's Private Key Is Protected | Enforce SSLCertificateKeyFile is configured (custom cert)"
        lineinfile:
            path: "{{ item }}"
            regexp: '^SSLCertificateKeyFile'
            line: 'SSLCertificateKeyFile /etc/ssl/certs/custom_cert_key.key'
        with_items:
            - "{{ apache_rhel_7_3_sslcertificatefile_location.stdout_lines }}"
        notify: restart httpd
        when: apache_cis_custom_cert

      - name: "SCORED | 7.3 | PATCH | Ensure the Server's Private Key Is Protected | Set permissions on SSLCertificateKeyFile (selfsigned)"
        file:
            path: "{{ item }}"
            owner: root
            group: root
            mode: '0400'
        with_items:
            - "/etc/ssl/certs/{{ apache_cis_hostname_cert }}.key"
            - "/etc/ssl/certs/{{ apache_cis_hostname_cert }}.clear"
        when: not apache_cis_custom_cert

      - name: "SCORED | 7.3 | PATCH | Ensure the Server's Private Key Is Protected | Set permissions on SSLCertificateKeyFile (custom cert)"
        file:
            path: /etc/ssl/certs/custom_cert_key.key
            owner: root
            group: root
            mode: '0400'
        when: apache_cis_custom_cert
  when:
      - apache_cis_7_3
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.3

- name: |
    "SCORED | 7.4 | PATCH | Ensure Weak SSL Protocols Are Disabled"
    "SCORED | 7.10 | PATCH | Ensure the TLSv1.0 and TLSv1.1 Protocols are Disabled"
  block:
      - name: |
          "SCORED | 7.4 | PATCH | Ensure Weak SSL Protocols Are Disabled | Set TLSv1.2 and TLSv1.3"
          "SCORED | 7.10 | PATCH | Ensure the TLSv1.0 and TLSv1.1 Protocols are Disabled | Set TLSv1.2 and TLSv1.3"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.d/ssl.conf"
            regexp: '^#SSLProtocol|^SSLProtocol'
            line: 'SSLProtocol TLSv1.2 TLSv1.3'
            insertafter: '^SSLEngine'
        notify: restart httpd
        when:
            - apache_cis_tls_1_2_available
            - ansible_facts.distribution_major_version == "8"
      
      - name: |
          "SCORED | 7.4 | PATCH | Ensure Weak SSL Protocols Are Disabled | Set TLSv1.2"
          "SCORED | 7.10 | PATCH | Ensure the TLSv1.0 and TLSv1.1 Protocols are Disabled| Set TLSv1.2"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.d/ssl.conf"
            regexp: '^#SSLProtocol|^SSLProtocol'
            line: 'SSLProtocol TLSv1.2'
            insertafter: '^SSLEngine'
        notify: restart httpd
        when:
            - apache_cis_tls_1_2_available
            - ansible_facts.distribution_major_version == "7"

      - name: |
          "SCORED | 7.4 | PATCH | Ensure Weak SSL Protocols Are Disabled | Set TLSv1"
          "SCORED | 7.10 | PATCH | Ensure the TLSv1.0 and TLSv1.1 Protocols are Disabled | Set TLSv1"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.d/ssl.conf"
            regexp: '^#SSLProtocol|^SSLProtocol'
            line: 'SSLProtocol TLSv1'
            insertafter: '^SSLEngine'
        notify: restart httpd
        when: not apache_cis_tls_1_2_available
  when:
      - apache_cis_7_4 or
        apache_cis_7_10
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.3

# -----------------------------
# -----------------------------
# Since the 7.5 and 7.8 controls are virtually the same the apache_cis_sslciphersuite_settings will control iv week and/or Medium ciphers are isabled
# -----------------------------
# -----------------------------
- name: |
    "SCORED | 7.5 | PATCH | Ensure Weak SSL/TLS Ciphers Are Disabled"
    "SCORED | 7.8 | PATCH | Ensure Medium Strength SSL/TLS Ciphers Are Disabled"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf.d/ssl.conf"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: 'SSLProtocol'
  with_items:
      - { regexp: '^#SSLHonorCipherOrder|^SSLHonorCipherOrder', line: 'SSLHonorCipherOrder on' }
      - { regexp: '^#SSLCipherSuite|^SSLCipherSuite', line: 'SSLCipherSuite {{ apache_cis_sslciphersuite_settings }}' }
  notify: restart httpd
  when:
      - apache_cis_7_5 or
        apache_cis_7.8
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.5

- name: "SCORED | 7.6 | PATCH | Ensure Insecure SSL Renegotiation Is Not Enabled"
  block:
      - name: "SCORED | 7.6 | AUDIT | Ensure Insecure SSL Renegotiation Is Not Enabled | Check if SSLInsecureRenegotiation is present"
        shell: "grep -r SSLInsecureRenegotiation {{ apache_cis_server_root_dir }}/* | grep -v Binary | cut -f1 -d:"
        changed_when: false
        failed_when: false
        register: apache_rhel_7_6_sslinsecurerenegotiation

      - name: "SCORED | 7.6 | PATCH | Ensure Insecure SSL Renegotiation Is Not Enabled | Set SSLInsecureRenegotiation to off if configured"
        lineinfile:
            path: "{{ apache_rhel_7_6_sslinsecurerenegotiation.stdout }}"
            regexp: '^#SSLInsecureRenegotiation|^SSLInsecureRenegotiation'
            line: 'SSLInsecureRenegotiation off'
        when: apache_rhel_7_6_sslinsecurerenegotiation.stdout != ""
  when:
      - apache_cis_7_6
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.6

- name: "SCORED | 7.7 | PATCH | Ensure SSL Compression is not Enabled"
  block:
      - name: "SCORED | 7.7 | AUDIT | Ensure SSL Compression is not Enabled | Check for SSLCompression parameter"
        shell: "grep -r SSLCompression {{ apache_cis_server_root_dir }}/* | grep -v Binary | cut -f1 -d:"
        changed_when: false
        failed_when: false
        register: apache_rhel_7_7_sslcompression

      - name: "SCORED | 7.7 | PATCH | Ensure SSL Compression is not Enabled | Set SSLCompression to off if Configured"
        lineinfile:
            path: "{{ apache_rhel_7_7_sslcompression.stdout }}"
            regexp: '^#SSLCompression|^SSLCompression'
            line: 'SSLCompression off'
        notify: restart httpd
        when: apache_rhel_7_7_sslcompression.stdout != ""
  when:
      - apache_cis_7_7
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.7

# -----------------------------
# -----------------------------
# Control 7.8 combined with control 7.5
# -----------------------------
# -----------------------------

- name: "SCORED | 7.9 | PATCH | Ensure All Web Content is Accessed via HTTPS"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^    Redirect'
      line: '    Redirect permanent / {{ apache_cis_tls_redirect }}'
      insertafter: '^<IfModule alias_module>'
  notify: restart httpd
  when:
      - apache_cis_7_9
      - apache_cis_section7
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_7.9

# -----------------------------
# -----------------------------
# Control 7.10 combined with control 7.4
# -----------------------------
# -----------------------------

# -----------------------------
# -----------------------------
# The three tasks below requires dynamic changes to <Directory> elements. Need to figure out best lineinfile way to handle this
# -----------------------------
# -----------------------------
- name: "SCORED | 7.11 | PATCH | Ensure OCSP Stapling Is Enabled"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_7_11
      - apache_cis_section7
  tags:
      - level2
      - scored
      - patch
      - rule_7.11
      - notimplimented

- name: "SCORED | 7.12 | PATCH | Ensure HTTP Strict Transport Security Is Enabled"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_7_12
      - apache_cis_section7
  tags:
      - level2
      - scored
      - patch
      - rule_7.12
      - notimplimented

- name: "SCORED | 7.13 | PATCH | Ensure Only Cipher Suites That Provide Forward Secrecy Are Enabled"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - apache_cis_7_13
      - apache_cis_section7
  tags:
      - level2
      - scored
      - patch
      - rule_7.13
      - notimplimented

# Section 8 Fixes
- name: "SCORED | 8.1 | PATCH | Ensure ServerTokens is Set to 'Prod' or 'ProductOnly'"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#ServerTokens|^ServerTokens'
      line: 'ServerTokens {{ apache_cis_servertokens }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_8_1
      - apache_cis_section8
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_8.1

- name: "SCORED | 8.2 | PATCH | Ensure ServerSignature Is Not Enabled"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#ServerSignature|^ServerSignature'
      line: 'ServerSignature Off'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_8_2
      - apache_cis_section8
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_8.2

- name: "SCORED | 8.3 | PATCH | Ensure All Default Apache Content Is Removed"
  replace:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^Include conf/extra/httpd-autoindex.conf'
      replace: '#Include conf/extra/httpd-autoindex.conf'
  when:
      - apache_cis_8_3
      - apache_cis_section8
  tags:
      - level2
      - scored
      - patch
      - rule_8.3

- name: "SCORED | 8.4 | PATCH | Ensure ETag Response Header Fields Do Not Include Inodes"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: 'FileETag'
      state: absent
  when:
      - apache_cis_8_4
      - apache_cis_section8
  tags:
      - level2
      - scored
      - patch
      - rule_8.4

# Section 9 Fixes
- name: "SCORED | 9.1 | PATCH | Ensure the TimeOut Is Set to 10 or Less"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#Timeout|^Timeout'
      line: 'Timeout {{ apache_cis_timeout }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_9_1
      - apache_cis_section9
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_9.1

- name: "SCORED | 9.2 | PATCH | Ensure KeepAlive Is Enabled"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#KeepAlive|^KeepAlive'
      line: 'KeepAlive On'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_9_2
      - apache_cis_section9
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_9.2

- name: "SCORED | 9.3 | PATCH | Ensure MaxKeepAliveRequests is Set to a Value of 100 or Greater"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#MaxKeepAliveRequests|^MaxKeepAliveRequests'
      line: 'MaxKeepAliveRequests {{ apache_cis_maxkeepaliverequests }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_9_3
      - apache_cis_section9
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_9.3

- name: "SCORED | 9.4 | PATCH | Ensure KeepAliveTimeout is Set to a Value of 15 or Less"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#KeepAliveTimeout|^KeepAliveTimeout'
      line: 'KeepAliveTimeout {{ apache_cis_keepalivetimeout }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_9_4
      - apache_cis_section9
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_9.4

# -----------------------------
# -----------------------------
# Control 9.5 and 9.6 are hard to set individually so they are combined to a single line. 
# -----------------------------
# -----------------------------
- name: |
    "SCORED | 9.5 | PATCH | Ensure the Timeout Limits for Request Headers is Set to 40 or Less"
    "SCORED | 9.6 | PATCH | Ensure Timeout Limits for the Request Body is Set to 20 or Less"
  block:
      - name: |
          "SCORED | 9.5 | PATCH | Ensure the Timeout Limits for Request Headers is Set to 40 or Less | Enable Request Timeout module"
          "SCORED | 9.6 | PATCH | Ensure Timeout Limits for the Request Body is Set to 20 or Less | Enable Request Timeout module"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf.modules.d/00-base.conf"
            regexp: 'LoadModule reqtimeout_module modules/mod_reqtimeout.so'
            line: 'LoadModule reqtimeout_module modules/mod_reqtimeout.so'

      - name: |
          "SCORED | 9.5 | AUDIT | Ensure the Timeout Limits for Request Headers is Set to 40 or Less | Check if reqtimeout_module enabled in httpd.conf"
          "SCORED | 9.6 | PATCH | Ensure Timeout Limits for the Request Body is Set to 20 or Less | Check if reqtimeout_module enabled in httpd.conf"
        shell: grep "<IfModule reqtimeout_module>" /etc/httpd/conf/httpd.conf
        changed_when: false
        failed_when: false
        register: apache_rhel_9_5_reqtimeout_module_status

      - name: |
          "SCORED | 9.5 | PATCH | Ensure the Timeout Limits for Request Headers is Set to 40 or Less | Add reqtimeout_module, set body, and header timeout"
          "SCORED | 9.6 | PATCH | Ensure Timeout Limits for the Request Body is Set to 20 or Less| Add reqtimeout_module, set body, and header timeout"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            line: |
                <IfModule reqtimeout_module>
                    RequestReadTimeout header={{ apache_cis_reqread_timeout }},MinRate=500 body={{ apache_cis_reqread_body }},MinRate=500
                </IfModule>
            insertafter: '# Supplemental configuration'
        when: apache_rhel_9_5_reqtimeout_module_status.stdout == ""

      - name: |
          "SCORED | 9.5 | PATCH | Ensure the Timeout Limits for Request Headers is Set to 40 or Less | Just set header and body timeout value"
          "SCORED | 9.6 | PATCH | Ensure Timeout Limits for the Request Body is Set to 20 or Less | Just set header and body timeout value"
        lineinfile:
            path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
            regexp: '^    RequestReadTimeout header'
            line: '    RequestReadTimeout header={{ apache_cis_reqread_timeout }},MinRate=500 body={{ apache_cis_reqread_body }},MinRate=500'
            insertafter: '<IfModule reqtimeout_module>'
        when: apache_rhel_9_5_reqtimeout_module_status.stdout != ""
  when:
      - apache_cis_9_5 or
        apache_cis_9_6
      - apache_cis_section9
  tags:
      - level1
      - level2
      - scored
      - patch
      - rule_9.5
      - rule_9.6

# -----------------------------
# -----------------------------
# Control 9.6 combined with control 9.5
# -----------------------------
# -----------------------------

# Section 10 Fixes
- name: "SCORED | 10.1 | PATCH | Ensure the LimitRequestLine directive is Set to 512 or less"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#LimitRequestline|^LimitRequestline'
      line: 'LimitRequestline {{ apache_cis_limitrequestline }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_10_1
      - apache_cis_section10
  tags:
      - level2
      - scored
      - patch
      - rule_10.1

- name: "SCORED | 10.2 | PATCH | Ensure the LimitRequestFields Directive is Set to 100 or Less"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#LimitRequestFields|^LimitRequestFields'
      line: 'LimitRequestFields {{ apache_cis_limitrequestfields }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_10_2
      - apache_cis_section10
  tags:
      - level2
      - scored
      - patch
      - rule_10.2

- name: "SCORED | 10.3 | PATCH | Ensure the LimitRequestFieldsize Directive is Set to 1024 or Less"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#LimitRequestFieldsize|^LimitRequestFieldsize'
      line: 'LimitRequestFieldsize {{ apache_cis_limitrequestfieldsize }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_10_3
      - apache_cis_section10
  tags:
      - level2
      - scored
      - patch
      - rule_10.3

- name: "SCORED | 10.4 | PATCH | Ensure the LimitRequestBody Directive is Set to 102400 or Less"
  lineinfile:
      path: "{{ apache_cis_server_root_dir }}/conf/httpd.conf"
      regexp: '^#LimitRequestBody|^LimitRequestBody'
      line: 'LimitRequestBody {{ apache_cis_limitrequestbody }}'
      insertafter: '# Supplemental configuration'
  when:
      - apache_cis_10_4
      - apache_cis_section10
  tags:
      - level2
      - scored
      - patch
      - rule_10.4

# Section 11
- name: "SCORED | 11.1 | PATCH | Ensure SELinux Is Enabled in Enforcing Mode"
  selinux:
      policy: targeted
      state: enforcing
  when:
      - apache_cis_11_1
      - apache_cis_section11
  tags:
      - level2
      - scored
      - patch
      - rule_11.1

- name: "SCORED | 11.2 | PATCH | Ensure Apache Processes Run in the httpd_t Confined Context"
  sefcontext:
      target: "{{ item }}"
      setype: httpd_exec_t
      ftype: f
  with_items:
      - /usr/sbin/httpd
      - /usr/sbin/httpd.worker
      - /usr/sbin/httpd.event
      - /usr/sbin/apachectl
  when:
      - apache_cis_11_2
      - apache_cis_section11
  tags:
      - level2
      - scored
      - patch
      - rule_11.2

- name: "SCORED | 11.3 | PATCH | Ensure the httpd_t Type is Not in Permissive Mode"
  selinux_permissive:
      name: httpd_t
      permissive: true
  when:
      - apache_cis_11_3
      - apache_cis_section11
  tags:
      - level2
      - scored
      - patch
      - rule_11.3

- name: "NOTSCORED | 11.4 | PATCH | Ensure Only the Necessary SELinux Booleans are Enabled"
  seboolean:
      name: httpd_enable_cgi
      state: no
      persistent: yes
  when:
      - apache_cis_11_4
      - apache_cis_section11
  tags:
      - level2
      - notscored
      - patch
      - rule_11.4

# Section 12
# -----------------------------
# -----------------------------
# AppArmor is not supported on RHEL based systems, this includes CentOS
# https://access.redhat.com/discussions/3983301
# -----------------------------
# -----------------------------
- name: "SCORED | 12.1 | AUDIT | Ensure the AppArmor Framework Is Enabled"
  debug:
      msg:
          - "This control is not applicable to RHEL based systems since AppArmor is not supported"
          - "https://access.redhat.com/discussions/3983301"
  when:
      - apache_cis_12_1
      - apache_cis_section12
  tags:
      - level2
      - scored
      - audit
      - rule_12.1

- name: "NOTSCORED | 12.2 | AUDIT | Ensure the Apache AppArmor Profile Is Configured Properly"
  debug:
      msg:
          - "This control is not applicable to RHEL based systems since AppArmor is not supported"
          - "https://access.redhat.com/discussions/3983301"
  when:
      - apache_cis_12_2
      - apache_cis_section12
  tags:
      - level2
      - notscored
      - audit
      - rule_12.2

- name: "SCORED | 12.3 | AUDIT | Ensure Apache AppArmor Profile is in Enforce Mode"
  debug:
      msg:
          - "This control is not applicable to RHEL based systems since AppArmor is not supported"
          - "https://access.redhat.com/discussions/3983301"
  when:
      - apache_cis_12_3
      - apache_cis_section12
  tags:
      - level2
      - scored
      - audit
      - rule_12.3