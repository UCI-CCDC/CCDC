---
# defaults file for Apache CIS

# The settings below will enable/disable entire CIS sections
apache_cis_section1: true
apache_cis_section2: true
apache_cis_section3: true
apache_cis_section4: true
apache_cis_section5: true
apache_cis_section6: true
apache_cis_section7: true
apache_cis_section8: true
apache_cis_section9: true
apache_cis_section10: true
apache_cis_section11: true
apache_cis_section12: true

apache_cis_skip_for_travis: false

# We've defined disruption-high to indicate items that are likely to cause
# disruption in a normal workflow.  These items can be remediated automatically
# but are disabled by default to avoid disruption.
apache_cis_disruption_high: true

# This will automate the install of Apache in the prelim tasks
# If apache is already installed set to false
automate_install: true

# Section 1 individual control toggles
apache_cis_1_1: true
apache_cis_1_2: true
apache_cis_1_3: true

# Section 2 individual control toggles
apache_cis_2_1: true
apache_cis_2_2: true
apache_cis_2_3: true
apache_cis_2_4: true
apache_cis_2_5: true
apache_cis_2_6: true
apache_cis_2_7: true
apache_cis_2_8: true
apache_cis_2_9: true

# Section 3 individual control toggles
apache_cis_3_1: true
apache_cis_3_2: true
apache_cis_3_3: true
apache_cis_3_4: true
apache_cis_3_5: true
apache_cis_3_6: true
apache_cis_3_7: true
apache_cis_3_8: true
apache_cis_3_9: true
apache_cis_3_10: true
apache_cis_3_11: true
apache_cis_3_12: true
apache_cis_3_13: true

# Section 4 individual control toggles
apache_cis_4_1: true
apache_cis_4_2: true
apache_cis_4_3: true
apache_cis_4_4: true

# Section 5 individual control toggles
apache_cis_5_1: true
apache_cis_5_2: false
apache_cis_5_3: true
apache_cis_5_4: true
apache_cis_5_5: true
apache_cis_5_6: true
apache_cis_5_7: true
apache_cis_5_8: true
apache_cis_5_9: true
apache_cis_5_10: true
apache_cis_5_11: true
apache_cis_5_12: true
apache_cis_5_13: true
apache_cis_5_14: true

# Section 6 individual control toggles
apache_cis_6_1: true
apache_cis_6_2: true
apache_cis_6_3: true
apache_cis_6_4: true
apache_cis_6_5: true
apache_cis_6_6: true
apache_cis_6_7: true

# Section 7 individual control toggles
apache_cis_7_1: true
apache_cis_7_2: true
apache_cis_7_3: true
apache_cis_7_4: true
apache_cis_7_5: true
apache_cis_7_6: true
apache_cis_7_7: true
apache_cis_7_8: true
apache_cis_7_9: true
apache_cis_7_10: true
apache_cis_7_11: true
apache_cis_7_12: true
apache_cis_7_13: true

# Section 8 individual control toggles
apache_cis_8_1: true
apache_cis_8_2: true
apache_cis_8_3: true
apache_cis_8_4: true

# Section 9 individual control toggles
apache_cis_9_1: true
apache_cis_9_2: true
apache_cis_9_3: true
apache_cis_9_4: true
apache_cis_9_5: true
apache_cis_9_6: true

# Section 10 individual control toggles
apache_cis_10_1: true
apache_cis_10_2: true
apache_cis_10_3: true
apache_cis_10_4: true

# Section 11 individual control toggles
apache_cis_11_1: true
apache_cis_11_2: true
apache_cis_11_3: true
apache_cis_11_4: true

# Section 12 individual control toggles
apache_cis_12_1: true
apache_cis_12_2: true
apache_cis_12_3: true

# The two variables below define the server root directory (path that apache resides)
# and the Document Root Directory. These are both derived from a task in tasks/prelim.yml
apache_cis_server_root_dir: "{{ apache_cis_server_root_dir_gather.stdout }}"
apache_cis_doc_root_dir: "{{ apache_cis_doc_root_dir_gather.stdout }}"

# The apache2_cis_server_root_dir is for Debian based systems
apache2_cis_server_root_dir: "{{ apache2_cis_server_root_dir_gather.stdout }}"
apache2_cis_doc_root_dir: "{{ apache2_cis_doc_root_dir_gather.stdout }}"
# Below are the control specific variables
# Section 1 task variables

# Section 2 task variables

# Section 3 task variables
# Control 3.1 variable
# apache_rhel_user is the user that the apache software will use for RHEL systems
# apache_ubuntu_user is the user that the apache software will use for Ubuntu (Debian) systems
apache_rhel_user: apache
apache_ubuntu_user: apache
# apache_rhel_group is the group the apache user will use for RHEL systems
# apache_ubuntu_user is the group the apache user will use for Ubuntu (Debian) systems
apache_rhel_group: apache
apache_ubuntu_group: apache

# Control 3.7
# apache_cis_core_dump_location is the folder for core dumps
apache_cis_core_dump_location: /var/log/apache2

# Control 3.8
# apache_cis_lockfile_location is the location to the lock file. This can not be the same location as as the DocumentRoot directory. Apache default is ServerRoot/logs
# The LockFile should be on a locally mounted driver rathare than an NFS mounted file system
# apache_cis_lockfile_location = RHEL based
# apache2_cis_lockfile_location = Debian based (Ubuntu)
apache_cis_lockfile_location: "{{ apache_cis_server_root_dir }}/logs"
apache2_cis_lockfile_location: "/var/lock/apache2"

# Section 5 task variables
# Control 5.2
# This is the options setting for the web root directory vhost settings. Needs to be None or Multiviews to conform to CIS standards
apache_cis_webrootdir_options: None

# Cotnrol 5.11
# This is the list of allowed file types for the FilesMatch directive in httpd.conf/apache.conf
apache_cis_allowed_filetypes: "css|html?|js|pdf|txt|xml|xsl|gif|ico|jpe?g|png"

# Control 5.12
# The hostname of the top level server for RewriteCond %{HTTP_HOST} config section of httpd.conf/apache.conf
apache_cis_toplevel_svr: 'www\.example\.com'
# Control 5.13 variable
# This is the list of ip's and ports that apache will listen on. If multiples are in use a dash (-) list is used
apache_cis_listen_ip_port:
    - 10.0.2.15:80

# Section 6 task variables
# Control 6.1
# all_mods is the level for everything but but core module. Value bust be notice or lower. The core_mod is the core mod setting and needs to be info or lower. 
apache_cis_loglevel:
    all_mods: "notice"
    core_mod: "info"

# Control 6.1/6.2
# Path to the apache error logs
apache_cis_errorlog_path: "/var/log/apache2"
# The facility setting for error logs. Any appropriate syslog facility can be used in place of local1 and will still conform to CIS standards
apache_cis_errorlog_facility: "local1"

# Control 6.3 variables
# apache_cis_log_format is the format that the log files will be created in. For compliance with the control
# the following need to be present (order does not matter for the CIS control)
# %h, %l, %u, %t, %r, %>s, %b, %{Referer}i, and %{User-agent}i
apache_cis_log_format: '"%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\""'
# apache_cis_custom_log is the path for the error log file
apache_cis_custom_log: "/var/log/apache2"

# Control 6.5
# apache_cis_extra_packages are the extra packages that will need to be updated. Please make this in list format
# example format apache_cis_extra_packages: "'apache2', 'telnet', 'openssl'"
apache_cis_extra_packages: "'apache2'"

# Control 6.7
# To install/configure OWASP requires internet connections. If there is no internet available please set to false
apache_cis_owasp_automate: true

# Section 7
# Control 7.2
# When apache_cis_custom_cert set to true the file in files/custom_cert will be copied to the /etc/ssl/certs folder
# When apache_cis_custom_cert set to false the control will create a self signed certificate
apache_cis_custom_cert: false
# The hostname used for certificate. It is important to remember that the browser will compare the host name in the URL to the common name in the 
# certificate, so that it is important that all https: URL's match the correct host name.
# Specifically, the host name www.example.com is not the same as example.com nor the
# same as ssl.example.com.
apache_cis_hostname_cert: "example.com"
# Control 7.2
# When using a cypher (aes128, aes256, etc) when generating an encrypted private key a passphrase is required
apache_cis_privatekey_passphrase: "letmein"
# Control 7.2
# This will be the final location to your signed certificate
apache_cis_csr_folder: "/etc/ssl/private"
# Control 7.2
# This is to add the hostname values to the openssl.cnf temp file.
# It is recommented (not required) that the first alt name is the common name.
# This is a list and must be in the format of DNS.X = <alternet host name>, where X is the next number sequentially
apache_cis_alt_names:
    - DNS:www.example.com
    - DNS:example.com
    - DNS:app.example.com
    - DNS:service.example.com
# Control 7.2
# The settings below relate to req_distinguished_name section of the openssl.cnf file. The var with the value set relates to the setting it is named after.
apache_req_distinguished_name_settings:
    countryName_default: "GB"
    stateOrProvinceName_default: "Scotland"
    localityName_default: "Glasgow"
    organizationName_default: "Example Company Ltd"
    organizationalUnitName_default: "ICT"
    commonName_default: "www.example.com"
    email_address: "blah@mail.com"

# Control 7.4
# apache_cis_tls_1_2_available will toggle TLS1.2 or TLSv1 set in ssl.conf. If TLS1.2 is available that is preferred but needs to be setup and TLSv1.0 and TLSv1.1 needs to removed/disabled
apache_cis_tls_1_2_available: true

# Control 7.5/7.8
# apache_cis_sslciphersuite_settings are the settings for the SSLCipherSuite parameter in the ssl.conf configuration.
# To conform to the CIS standard for 7.5 (weak ciphers disabled) these settings must have !NULL:!SSLv2:!RC4:!aNULL and it is not recommented to add !SSLv3. Example value: ALL:!EXP:!NULL:!LOW:!SSLv2:!RC4:!aNULL
# to conform to the CIS standard for 7.8 (medium ciphers disables) these settings must have !3DES:!IDEA. Example value: ALL:!EXP:!NULL:!LOW:!SSLv2:!RC4:!aNULL:!3DES:!IDEA
apache_cis_sslciphersuite_settings: "ALL:!EXP:!NULL:!LOW:!SSLv2:!RC4:!aNULL:!3DES:!IDEA"

# Control 7.9
# apache_cis_tls_redirect is the web address that will be used to redirect a tls website or similar
apache_cis_tls_redirect: "https://www.cisecurity.org/"


# Section 8 task variables
# Control 8.1
# apache_cis_servertokens needs to be set to either Prod or ProductOnly
apache_cis_servertokens: "Prod"

# Section 9 task variables
# Control 9.1
# apache_cis_timeout is the apache server timeout, must be set to less than 10 seconds to conform to CIS standards
apache_cis_timeout: 10

# Control 9.3
# apache_cis_maxkeepaliverequests is the max number of keep alive requests. Needs to be set to 100 or more to conform to CIS standards
apache_cis_maxkeepaliverequests: 100

# Control 9.4
# apache_cis_keepalivetimeout is the keep alive timout value in seconds. Needs to be set to 15 or less to conform to CIS standards
apache_cis_keepalivetimeout: 15

# Control 9.5
# apache_cis_reqread_timeout is the value or range of the request read timeout in seconds. The max length can not exceed 40 seconds to conform to CIS standards
apache_cis_reqread_timeout: 20-40

# Control 9.6
# apache_cis_reqread_body is the value of the request read body timout in seconds. This needs to be set to 20 seconds or less to conform to CIS standards
apache_cis_reqread_body: 20

# Section 10 task variables
# Control 10.1
# apache_cis_limitrequestline is the limit set to the request line. The value needs to be 512 or shorter to conform to CIS standards
apache_cis_limitrequestline: 512

# Control 10.2
# apache_cis_limitrequestfields is the limit set to the number of fields. The value needs to be 100 or less to conform to CIS standards
apache_cis_limitrequestfields: 100

# Control 10.3
# apache_cis_limitrequestfieldsize is the limit set for the size of the request headers. The value needs to be 1024 or less
apache_cis_limitrequestfieldsize: 1024

# Control 10.4
# apache_cis_limitrequestbody is the limit set for the size of the request body. The value needs to be set to 102400 (100k) or less
apache_cis_limitrequestbody: 102400

# Control 11.1
# apache2_cis_selinux is if you are using AppArmor on Ubuntu instead of SELinux. AppArmor is installed by default with Ubuntu
# AppArmor is not supported on RHEL based systems and this toggle will not work with the RHEL implimentation of the CIS role. 
apache2_cis_selinux: false